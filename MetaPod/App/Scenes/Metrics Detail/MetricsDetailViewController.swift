//
//  MetricsDetailViewController.swift
//  MetaPod
//
//  Created by Anderson Oliveira on 11/02/19.
//  Copyright (c) 2019 Zup. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit

protocol MetricsDetailViewControllerInput {
    
}

protocol MetricsDetailViewControllerOutput {
    
}

class MetricsDetailViewController: UIViewController, MetricsDetailViewControllerInput {

    @IBOutlet weak var headerView: UIView!
    @IBOutlet weak var collectionView: UICollectionView!

    var output: MetricsDetailViewControllerOutput?
    var router: MetricsDetailRouter?
    
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        MetricsDetailConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupStyle()
        registerCells()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
    }

    override var preferredStatusBarStyle: UIStatusBarStyle {
        return .lightContent
    }
    
    // MARK: Requests
    
    
    // MARK: Display logic
}

extension MetricsDetailViewController {

//    private func resume() {
//        UIView.animate(withDuration: 2.0) {
//            self.containerView.frame.size.height = self.headerView.frame.height
//        }
//    }
    
    private func setupStyle() {
        collectionView.backgroundColor = .clear
    }
    
    private func registerCells() {
        let metricsDetailNib = UINib(nibName: MetricsDetailCollectionViewCell.cellIdentifier, bundle: nil)
        collectionView.register(metricsDetailNib, forCellWithReuseIdentifier: MetricsDetailCollectionViewCell.cellIdentifier)
    }
}

//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension MetricsDetailViewController: MetricsDetailPresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}
