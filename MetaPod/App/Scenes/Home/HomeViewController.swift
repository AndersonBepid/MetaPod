//
//  HomeViewController.swift
//  MetaPod
//
//  Created by Anderson Moura de Oliveira on 15/01/19.
//  Copyright (c) 2019 Zup. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit
import Firebase

protocol HomeViewControllerInput {
    func displayOwners(viewModel: HomeScene.FetchOwners.ViewModel)
}

protocol HomeViewControllerOutput {
    func fetchOwners(request: HomeScene.FetchOwners.Request)
    func selectOwner(request: HomeScene.SelectOwner.Request)
}

class HomeViewController: UIViewController, HomeViewControllerInput {

    @IBOutlet weak var collectionView: UICollectionView!

    var output: HomeViewControllerOutput?
    var router: HomeRouter?

    var owners: Owners = []
    var ownersFormatted: HomeScene.FetchOwners.ViewModel.OwnersModel = []

    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        HomeConfigurator.sharedInstance.configure(viewController: self)
    }

    override var preferredStatusBarStyle: UIStatusBarStyle {
        return .lightContent
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupStyle()
        registerCell()
        fetchOwners()
    }
    
    // MARK: Requests

    private func fetchOwners() {
        let request = HomeScene.FetchOwners.Request()
        output?.fetchOwners(request: request)
    }
    
    // MARK: Display logic

    func displayOwners(viewModel: HomeScene.FetchOwners.ViewModel) {
        switch viewModel.result {
        case .success(let ownersFormatted, let owners):
            self.owners = owners
            self.ownersFormatted = ownersFormatted
            DispatchQueue.main.async {
                self.collectionView.reloadData()
            }
        case .failure(let errorMessege):
            print(errorMessege)
        }
    }
}

// MARK: Aux

extension HomeViewController {
    
    private func registerCell() {
        let repositoryCellNib = UINib(nibName: OwnerCollectionViewCell.cellIdentifier, bundle: nil)
        collectionView.register(repositoryCellNib, forCellWithReuseIdentifier: OwnerCollectionViewCell.cellIdentifier)
    }

    private func setupStyle() {
        collectionView.backgroundColor = .clear
    }
}

//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension HomeViewController: HomePresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}
