//
//  MetricsSummaryViewController.swift
//  MetaPod
//
//  Created by Anderson Moura de Oliveira on 11/02/19.
//  Copyright (c) 2019 Zup. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit
import MBCircularProgressBar

protocol MetricsSummaryViewControllerInput {
    
}

protocol MetricsSummaryViewControllerOutput {
    
}

class MetricsSummaryViewController: UIViewController, MetricsSummaryViewControllerInput {

    @IBOutlet weak var visualEffectView: UIVisualEffectView!
    @IBOutlet weak var activityIndicator: UIActivityIndicatorView!
    @IBOutlet weak var circularProgress: MBCircularProgressBarView!
    
    var output: MetricsSummaryViewControllerOutput?
    var router: MetricsSummaryRouter?

    var isLoading: Bool = false {
        didSet {
            circularProgress.showValueString = !isLoading
            if isLoading {
                activityIndicator.startAnimating()
            } else {
                activityIndicator.stopAnimating()
            }
        }
    }
    
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        MetricsSummaryConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupStyle()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        DispatchQueue.main.asyncAfter(deadline: .now() + 3) {
            self.isLoading = false
            UIView.animate(withDuration: 0.75, animations: {
                self.circularProgress.unitString = "%"
                self.circularProgress.value = 22.82
                self.visualEffectView.frame.size.height = self.view.frame.height * 0.3
            })
            self.view.layoutIfNeeded()
        }
    }
    
    override var preferredStatusBarStyle: UIStatusBarStyle {
        return .lightContent
    }
    
    // MARK: Requests
    
    
    // MARK: Display logic
    
}

extension MetricsSummaryViewController {

    private func setupStyle() {
        self.visualEffectView.dropShadow()
        self.isLoading = true
        circularProgress.backgroundColor = .clear
    }
}

//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension MetricsSummaryViewController: MetricsSummaryPresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}
